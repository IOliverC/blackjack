{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlumnoT\\\\Desktop\\\\VSCode\\\\2oTrimestre\\\\Interfaces\\\\blackjack\\\\src\\\\componentes\\\\Mano\\\\index.js\";\nimport React from 'react';\nimport Cartas from '../Cartas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mano = ({\n  cartas,\n  titulo\n}) => {\n  // Calcular la puntuación total de la mano\n  const calcularPuntuacion = () => {\n    let puntuacion = 0;\n    let ases = 0;\n    for (const carta of cartas) {\n      if (carta.numero === 'A') {\n        ases++;\n        puntuacion += 11;\n      } else if (['K', 'Q', 'J'].includes(carta.numero)) {\n        puntuacion += 10;\n      } else {\n        puntuacion += parseInt(carta.numero);\n      }\n    }\n\n    // Ajustar el valor de los ases si se pasa de 21\n    while (puntuacion > 21 && ases) {\n      puntuacion -= 10;\n      ases--;\n    }\n    return puntuacion;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mano\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartas-container\",\n      children: cartas.map((carta, index) => /*#__PURE__*/_jsxDEV(Cartas, {\n        numero: carta.numero,\n        palo: carta.palo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Puntuaci\\xF3n: \", calcularPuntuacion()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n_c = Mano;\nexport default Mano;\nvar _c;\n$RefreshReg$(_c, \"Mano\");","map":{"version":3,"names":["React","Cartas","jsxDEV","_jsxDEV","Mano","cartas","titulo","calcularPuntuacion","puntuacion","ases","carta","numero","includes","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","palo","_c","$RefreshReg$"],"sources":["C:/Users/AlumnoT/Desktop/VSCode/2oTrimestre/Interfaces/blackjack/src/componentes/Mano/index.js"],"sourcesContent":["import React from 'react';\r\nimport Cartas from '../Cartas';\r\n\r\nconst Mano = ({ cartas, titulo }) => {\r\n    // Calcular la puntuación total de la mano\r\n    const calcularPuntuacion = () => {\r\n        let puntuacion = 0;\r\n        let ases = 0;\r\n        \r\n        for (const carta of cartas) {\r\n            if (carta.numero === 'A') {\r\n                ases++;\r\n                puntuacion += 11;\r\n            } else if (['K', 'Q', 'J'].includes(carta.numero)) {\r\n                puntuacion += 10;\r\n            } else {\r\n                puntuacion += parseInt(carta.numero);\r\n            }\r\n        }\r\n\r\n        // Ajustar el valor de los ases si se pasa de 21\r\n        while (puntuacion > 21 && ases) {\r\n            puntuacion -= 10;\r\n            ases--;\r\n        }\r\n\r\n        return puntuacion;\r\n        };\r\n        return (\r\n            <div className=\"mano\">\r\n                <h2>{titulo}</h2>\r\n                <div className=\"cartas-container\">\r\n                    {cartas.map((carta, index) => (\r\n                        <Cartas key={index} numero={carta.numero} palo={carta.palo} />\r\n                    ))}\r\n                </div>\r\n                <p>Puntuación: {calcularPuntuacion()}</p>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Mano;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EACjC;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,IAAI,GAAG,CAAC;IAEZ,KAAK,MAAMC,KAAK,IAAIL,MAAM,EAAE;MACxB,IAAIK,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBF,IAAI,EAAE;QACND,UAAU,IAAI,EAAE;MACpB,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACI,QAAQ,CAACF,KAAK,CAACC,MAAM,CAAC,EAAE;QAC/CH,UAAU,IAAI,EAAE;MACpB,CAAC,MAAM;QACHA,UAAU,IAAIK,QAAQ,CAACH,KAAK,CAACC,MAAM,CAAC;MACxC;IACJ;;IAEA;IACA,OAAOH,UAAU,GAAG,EAAE,IAAIC,IAAI,EAAE;MAC5BD,UAAU,IAAI,EAAE;MAChBC,IAAI,EAAE;IACV;IAEA,OAAOD,UAAU;EACjB,CAAC;EACD,oBACIL,OAAA;IAAKW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBZ,OAAA;MAAAY,QAAA,EAAKT;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjBhB,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5BV,MAAM,CAACe,GAAG,CAAC,CAACV,KAAK,EAAEW,KAAK,kBACrBlB,OAAA,CAACF,MAAM;QAAaU,MAAM,EAAED,KAAK,CAACC,MAAO;QAACW,IAAI,EAAEZ,KAAK,CAACY;MAAK,GAA9CD,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNhB,OAAA;MAAAY,QAAA,GAAG,iBAAY,EAACR,kBAAkB,CAAC,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAElB,CAAC;AAACI,EAAA,GApCInB,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}