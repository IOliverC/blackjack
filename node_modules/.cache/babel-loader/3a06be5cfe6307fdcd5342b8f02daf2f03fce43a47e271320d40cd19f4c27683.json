{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlumnoT\\\\Desktop\\\\VSCode\\\\2oTrimestre\\\\Interfaces\\\\blackjack\\\\src\\\\componentes\\\\Juego\\\\index.js\",\n  _s = $RefreshSig$();\n// Juego.js\nimport React, { useState, useEffect } from 'react';\nimport Deck from '../Deck';\nimport Jugador from '../Jugador';\nimport Crupier from '../Crupier';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Juego = () => {\n  _s();\n  const [baraja, setBaraja] = useState([]);\n  const [jugadorCartas, setJugadorCartas] = useState([]);\n  const [crupierCartas, setCrupierCartas] = useState([]);\n  const [mostrarPrimeraCartaCrupier, setMostrarPrimeraCartaCrupier] = useState(false);\n  const [estadoJuego, setEstadoJuego] = useState('iniciando');\n  useEffect(() => {\n    iniciarNuevaRonda();\n  }, []);\n  const barajarCartas = () => {\n    const nuevaBaraja = [];\n    const palos = ['trebol', 'corazones', 'rombo', 'picas'];\n    const numeros = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    palos.forEach(palo => {\n      numeros.forEach(numero => {\n        nuevaBaraja.push({\n          numero,\n          palo\n        });\n      });\n    });\n    for (let i = nuevaBaraja.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [nuevaBaraja[i], nuevaBaraja[j]] = [nuevaBaraja[j], nuevaBaraja[i]];\n    }\n    setBaraja(nuevaBaraja);\n  };\n  const iniciarNuevaRonda = () => {\n    barajarCartas();\n    setJugadorCartas([]);\n    setCrupierCartas([]);\n    setMostrarPrimeraCartaCrupier(false);\n    setEstadoJuego('iniciando');\n  };\n  const repartirCartas = (cantidad, destinatario) => {\n    const nuevasCartas = baraja.slice(0, cantidad);\n    setBaraja(baraja.slice(cantidad));\n    if (destinatario === 'jugador') {\n      setJugadorCartas([...jugadorCartas, ...nuevasCartas]);\n    } else if (destinatario === 'crupier') {\n      setCrupierCartas([...crupierCartas, ...nuevasCartas]);\n    }\n  };\n  const manejarFinDeRonda = () => {\n    setMostrarPrimeraCartaCrupier(true);\n  };\n  const solicitarCartaJugador = () => {\n    repartirCartas(1, 'jugador');\n    if (jugadorCartas.length >= 5) {\n      manejarFinDeRonda();\n    }\n  };\n  const solicitarCartaCrupier = () => {\n    repartirCartas(1, 'crupier');\n    if (calcularPuntuacion(crupierCartas) >= 17) {\n      manejarFinDeRonda();\n    }\n  };\n  const plantarse = () => {\n    setEstadoJuego('plantado');\n    solicitarCartaCrupier();\n  };\n  const calcularPuntuacion = cartas => {\n    let puntuacion = 0;\n    let ases = 0;\n    for (const carta of cartas) {\n      if (carta.numero === 'A') {\n        ases++;\n        puntuacion += 11;\n      } else if (['K', 'Q', 'J'].includes(carta.numero)) {\n        puntuacion += 10;\n      } else {\n        puntuacion += parseInt(carta.numero);\n      }\n    }\n    while (puntuacion > 21 && ases) {\n      puntuacion -= 10;\n      ases--;\n    }\n    return puntuacion;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"juego\",\n    children: [/*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Jugador, {\n      cartas: jugadorCartas,\n      solicitarCarta: solicitarCartaJugador,\n      plantarse: plantarse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Crupier, {\n      cartas: crupierCartas,\n      mostrarPrimeraCarta: mostrarPrimeraCartaCrupier,\n      solicitarCarta: solicitarCartaCrupier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), estadoJuego === 'plantado' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: iniciarNuevaRonda,\n      children: \"Nueva Ronda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Juego, \"NeNxf0ly7gQSYxmQTRMKeysqvaw=\");\n_c = Juego;\nexport default Juego;\nvar _c;\n$RefreshReg$(_c, \"Juego\");","map":{"version":3,"names":["React","useState","useEffect","Deck","Jugador","Crupier","jsxDEV","_jsxDEV","Juego","_s","baraja","setBaraja","jugadorCartas","setJugadorCartas","crupierCartas","setCrupierCartas","mostrarPrimeraCartaCrupier","setMostrarPrimeraCartaCrupier","estadoJuego","setEstadoJuego","iniciarNuevaRonda","barajarCartas","nuevaBaraja","palos","numeros","forEach","palo","numero","push","i","length","j","Math","floor","random","repartirCartas","cantidad","destinatario","nuevasCartas","slice","manejarFinDeRonda","solicitarCartaJugador","solicitarCartaCrupier","calcularPuntuacion","plantarse","cartas","puntuacion","ases","carta","includes","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","solicitarCarta","mostrarPrimeraCarta","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlumnoT/Desktop/VSCode/2oTrimestre/Interfaces/blackjack/src/componentes/Juego/index.js"],"sourcesContent":["// Juego.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Deck from '../Deck';\r\nimport Jugador from '../Jugador';\r\nimport Crupier from '../Crupier';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Juego = () => {\r\n  const [baraja, setBaraja] = useState([]);\r\n  const [jugadorCartas, setJugadorCartas] = useState([]);\r\n  const [crupierCartas, setCrupierCartas] = useState([]);\r\n  const [mostrarPrimeraCartaCrupier, setMostrarPrimeraCartaCrupier] = useState(false);\r\n  const [estadoJuego, setEstadoJuego] = useState('iniciando');\r\n\r\n  useEffect(() => {\r\n    iniciarNuevaRonda();\r\n  }, []); \r\n\r\n  const barajarCartas = () => {\r\n    const nuevaBaraja = [];\r\n    const palos = ['trebol', 'corazones', 'rombo', 'picas'];\r\n    const numeros = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\r\n\r\n    palos.forEach((palo) => {\r\n      numeros.forEach((numero) => {\r\n        nuevaBaraja.push({ numero, palo });\r\n      });\r\n    });\r\n\r\n    for (let i = nuevaBaraja.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [nuevaBaraja[i], nuevaBaraja[j]] = [nuevaBaraja[j], nuevaBaraja[i]];\r\n    }\r\n\r\n    setBaraja(nuevaBaraja);\r\n  };\r\n\r\n  const iniciarNuevaRonda = () => {\r\n    barajarCartas();\r\n    setJugadorCartas([]);\r\n    setCrupierCartas([]);\r\n    setMostrarPrimeraCartaCrupier(false);\r\n    setEstadoJuego('iniciando');\r\n  };\r\n\r\n  const repartirCartas = (cantidad, destinatario) => {\r\n    const nuevasCartas = baraja.slice(0, cantidad);\r\n    setBaraja(baraja.slice(cantidad));\r\n\r\n    if (destinatario === 'jugador') {\r\n      setJugadorCartas([...jugadorCartas, ...nuevasCartas]);\r\n    } else if (destinatario === 'crupier') {\r\n      setCrupierCartas([...crupierCartas, ...nuevasCartas]);\r\n    }\r\n  };\r\n\r\n  const manejarFinDeRonda = () => {\r\n    setMostrarPrimeraCartaCrupier(true);\r\n\r\n  };\r\n\r\n  const solicitarCartaJugador = () => {\r\n    repartirCartas(1, 'jugador');\r\n\r\n\r\n    if (jugadorCartas.length >= 5) {\r\n\r\n      manejarFinDeRonda();\r\n    }\r\n  };\r\n\r\n  const solicitarCartaCrupier = () => {\r\n    repartirCartas(1, 'crupier');\r\n\r\n\r\n    if (calcularPuntuacion(crupierCartas) >= 17) {\r\n      \r\n      manejarFinDeRonda();\r\n    }\r\n  };\r\n\r\n  const plantarse = () => {\r\n    setEstadoJuego('plantado');\r\n\r\n    solicitarCartaCrupier(); \r\n  };\r\n\r\n  const calcularPuntuacion = (cartas) => {\r\n    let puntuacion = 0;\r\n    let ases = 0;\r\n\r\n    for (const carta of cartas) {\r\n      if (carta.numero === 'A') {\r\n        ases++;\r\n        puntuacion += 11;\r\n      } else if (['K', 'Q', 'J'].includes(carta.numero)) {\r\n        puntuacion += 10;\r\n      } else {\r\n        puntuacion += parseInt(carta.numero);\r\n      }\r\n    }\r\n\r\n    while (puntuacion > 21 && ases) {\r\n      puntuacion -= 10;\r\n      ases--;\r\n    }\r\n\r\n    return puntuacion;\r\n  };\r\n\r\n  return (\r\n    <div className=\"juego\">\r\n      <Deck />\r\n      <Jugador cartas={jugadorCartas} solicitarCarta={solicitarCartaJugador} plantarse={plantarse} />\r\n      <Crupier\r\n        cartas={crupierCartas}\r\n        mostrarPrimeraCarta={mostrarPrimeraCartaCrupier}\r\n        solicitarCarta={solicitarCartaCrupier}\r\n      />\r\n      {estadoJuego === 'plantado' && (\r\n        <button onClick={iniciarNuevaRonda}>Nueva Ronda</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Juego;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}