{"ast":null,"code":"var _jsxFileName = \"M:\\\\Trabajos\\\\2oTrimestre\\\\Interfaces\\\\blackjack\\\\src\\\\componentes\\\\Juego\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport Jugador from '../Jugador';\nimport Crupier from '../Crupier';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Juego = () => {\n  _s();\n  const [baraja, setBaraja] = useState([]);\n  const [jugadorCartas, setJugadorCartas] = useState([]);\n  const [crupierCartas, setCrupierCartas] = useState([]);\n  const [estadoJuego, setEstadoJuego] = useState('iniciando');\n  const crupierCartasRef = useRef(crupierCartas);\n  const barajarCartas = useCallback(() => {\n    const nuevaBaraja = [];\n    const palos = ['trebol', 'corazones', 'rombo', 'picas'];\n    const numeros = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    palos.forEach(palo => {\n      numeros.forEach(numero => {\n        let valor = 0;\n        if (['K', 'Q', 'J'].includes(numero)) {\n          valor = 10;\n        } else if (numero !== 'A') {\n          valor = parseInt(numero);\n        } else {\n          valor = 11;\n        }\n        nuevaBaraja.push({\n          numero,\n          palo,\n          valor,\n          isFaceDown: false\n        });\n      });\n    });\n    for (let i = nuevaBaraja.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [nuevaBaraja[i], nuevaBaraja[j]] = [nuevaBaraja[j], nuevaBaraja[i]];\n    }\n    setBaraja(nuevaBaraja);\n  }, []);\n  useEffect(() => {\n    barajarCartas();\n  }, [barajarCartas]);\n  const repartirCartas = useCallback((cantidad, destinatario) => {\n    const nuevasCartas = baraja.slice(0, cantidad);\n    setBaraja(baraja.slice(cantidad));\n    if (destinatario === 'jugador') {\n      setJugadorCartas(cartas => [...cartas, ...nuevasCartas]);\n    } else if (destinatario === 'crupier') {\n      // Elimina las cartas del jugador de la baraja\n      const barajaSinJugador = baraja.filter(carta => !nuevasCartas.some(nuevaCarta => nuevaCarta.numero === carta.numero && nuevaCarta.palo === carta.palo));\n      const cartaAleatoria = barajaSinJugador[Math.floor(Math.random() * barajaSinJugador.length)];\n      const cartasCrupier = [cartaAleatoria, ...nuevasCartas.slice(1)];\n      if (cartasCrupier[1]) {\n        cartasCrupier[1].isFaceDown = true;\n      }\n      setCrupierCartas(cartas => [...cartas, ...cartasCrupier]);\n    }\n  }, [baraja]);\n  const iniciarNuevaRonda = useCallback(() => {\n    barajarCartas();\n    setJugadorCartas([]);\n    setCrupierCartas([]);\n    repartirCartas(1, 'jugador');\n    repartirCartas(2, 'crupier');\n    setEstadoJuego('jugando');\n  }, [barajarCartas, repartirCartas]);\n  const calcularPuntuacion = cartas => {\n    let puntuacion = 0;\n    for (const carta of cartas) {\n      let valor = 0;\n      if (!carta.isFaceDown) {\n        if (carta.numero === 'A') {\n          valor = 11; // As siempre vale 11\n        } else if (['K', 'Q', 'J'].includes(carta.numero)) {\n          valor = 10;\n        } else {\n          valor = parseInt(carta.numero);\n        }\n      }\n      puntuacion += valor;\n    }\n    return puntuacion;\n  };\n  console.log(cartas);\n  const manejarFinDeRonda = useCallback(() => {\n    const puntuacionJugador = calcularPuntuacion(jugadorCartas);\n    const puntuacionCrupier = calcularPuntuacion(crupierCartas);\n    if (puntuacionJugador < 21 && puntuacionCrupier > 21) {\n      setEstadoJuego('jugadorGana');\n      window.alert('Gana el jugador, Crupier sobrepasó de 21 puntos.');\n    } else if (puntuacionCrupier < 21 && puntuacionJugador > 21) {\n      setEstadoJuego('crupierGana');\n      window.alert('Gana el Crupier, por acercarse más al 21 que el jugador');\n    } else if (puntuacionCrupier === puntuacionJugador) {\n      setEstadoJuego('empate');\n      window.alert('Empataron');\n    } else if (puntuacionCrupier > puntuacionJugador && puntuacionCrupier <= 21) {\n      setEstadoJuego('crupierGana');\n      window.alert('Gana el Crupier.');\n    } else {\n      setEstadoJuego('jugadorGana');\n      window.alert('Gana el jugador.');\n    }\n  }, [jugadorCartas, crupierCartas]);\n  const solicitarCartaJugador = useCallback(() => {\n    if (estadoJuego !== 'plantado' && estadoJuego !== 'jugadorGana' && estadoJuego !== 'crupierGana' && estadoJuego !== 'empate') {\n      repartirCartas(1, 'jugador');\n      const puntuacionActual = calcularPuntuacion(jugadorCartas);\n      if (puntuacionActual >= 21) {\n        manejarFinDeRonda();\n      }\n    }\n  }, [repartirCartas, jugadorCartas, manejarFinDeRonda, estadoJuego]);\n  const plantarse = useCallback(() => {\n    setEstadoJuego('plantado');\n    const nuevasCartasCrupier = [...crupierCartas];\n    nuevasCartasCrupier.forEach(carta => carta.isFaceDown = false);\n    setCrupierCartas(nuevasCartasCrupier);\n    const robarCartasCrupier = () => {\n      const nuevasCartasCrupier = [...crupierCartasRef.current];\n      let puntuacionCrupier = calcularPuntuacion(nuevasCartasCrupier);\n      if (puntuacionCrupier < 17) {\n        repartirCartas(1, 'crupier');\n        setTimeout(robarCartasCrupier, 500);\n      } else {\n        manejarFinDeRonda();\n        return;\n      }\n    };\n    robarCartasCrupier();\n  }, [crupierCartas, manejarFinDeRonda, repartirCartas]);\n  useEffect(() => {\n    crupierCartasRef.current = crupierCartas;\n  }, [crupierCartas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crupierCartas col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(Crupier, {\n          cartas: crupierCartas,\n          solicitarCarta: solicitarCartaJugador\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jugadorCartas col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(Jugador, {\n          cartas: jugadorCartas,\n          solicitarCarta: solicitarCartaJugador,\n          plantarse: plantarse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton3\",\n          onClick: iniciarNuevaRonda,\n          children: \"Nueva Ronda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Juego, \"KwvE1mzrGVPyfD/tBwE4DcdAvJo=\");\n_c = Juego;\nexport default Juego;\nvar _c;\n$RefreshReg$(_c, \"Juego\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","Jugador","Crupier","jsxDEV","_jsxDEV","Juego","_s","baraja","setBaraja","jugadorCartas","setJugadorCartas","crupierCartas","setCrupierCartas","estadoJuego","setEstadoJuego","crupierCartasRef","barajarCartas","nuevaBaraja","palos","numeros","forEach","palo","numero","valor","includes","parseInt","push","isFaceDown","i","length","j","Math","floor","random","repartirCartas","cantidad","destinatario","nuevasCartas","slice","cartas","barajaSinJugador","filter","carta","some","nuevaCarta","cartaAleatoria","cartasCrupier","iniciarNuevaRonda","calcularPuntuacion","puntuacion","console","log","manejarFinDeRonda","puntuacionJugador","puntuacionCrupier","window","alert","solicitarCartaJugador","puntuacionActual","plantarse","nuevasCartasCrupier","robarCartasCrupier","current","setTimeout","className","children","solicitarCarta","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["M:/Trabajos/2oTrimestre/Interfaces/blackjack/src/componentes/Juego/index.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport Jugador from '../Jugador';\r\nimport Crupier from '../Crupier';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Juego = () => {\r\n  const [baraja, setBaraja] = useState([]);\r\n  const [jugadorCartas, setJugadorCartas] = useState([]);\r\n  const [crupierCartas, setCrupierCartas] = useState([]);\r\n  const [estadoJuego, setEstadoJuego] = useState('iniciando');\r\n  const crupierCartasRef = useRef(crupierCartas);\r\n\r\n  const barajarCartas = useCallback(() => {\r\n    const nuevaBaraja = [];\r\n    const palos = ['trebol', 'corazones', 'rombo', 'picas'];\r\n    const numeros = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\r\n\r\n    palos.forEach((palo) => {\r\n      numeros.forEach((numero) => {\r\n        let valor = 0;\r\n        if (['K', 'Q', 'J'].includes(numero)) {\r\n          valor = 10;\r\n        } else if (numero !== 'A') {\r\n          valor = parseInt(numero);\r\n        } else {\r\n          valor = 11;\r\n        }\r\n        nuevaBaraja.push({ numero, palo, valor, isFaceDown: false });\r\n      });\r\n    });\r\n\r\n    for (let i = nuevaBaraja.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [nuevaBaraja[i], nuevaBaraja[j]] = [nuevaBaraja[j], nuevaBaraja[i]];\r\n    }\r\n\r\n    setBaraja(nuevaBaraja);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    barajarCartas();\r\n  }, [barajarCartas]);\r\n\r\n  const repartirCartas = useCallback((cantidad, destinatario) => {\r\n    const nuevasCartas = baraja.slice(0, cantidad);\r\n    setBaraja(baraja.slice(cantidad));\r\n  \r\n    if (destinatario === 'jugador') {\r\n      setJugadorCartas((cartas) => [...cartas, ...nuevasCartas]);\r\n    } else if (destinatario === 'crupier') {\r\n      // Elimina las cartas del jugador de la baraja\r\n      const barajaSinJugador = baraja.filter(\r\n        (carta) =>\r\n          !nuevasCartas.some(\r\n            (nuevaCarta) => nuevaCarta.numero === carta.numero && nuevaCarta.palo === carta.palo\r\n          )\r\n      );\r\n  \r\n      const cartaAleatoria = barajaSinJugador[Math.floor(Math.random() * barajaSinJugador.length)];\r\n      const cartasCrupier = [cartaAleatoria, ...nuevasCartas.slice(1)];\r\n  \r\n      if (cartasCrupier[1]) {\r\n        cartasCrupier[1].isFaceDown = true;\r\n      }\r\n  \r\n      setCrupierCartas((cartas) => [...cartas, ...cartasCrupier]);\r\n    }\r\n  }, [baraja]);\r\n  \r\n\r\n  const iniciarNuevaRonda = useCallback(() => {\r\n    barajarCartas();\r\n    setJugadorCartas([]);\r\n    setCrupierCartas([]);\r\n    repartirCartas(1, 'jugador');\r\n    repartirCartas(2, 'crupier');\r\n    setEstadoJuego('jugando');\r\n  }, [barajarCartas, repartirCartas]);\r\n\r\n  const calcularPuntuacion = (cartas) => {\r\n    let puntuacion = 0;\r\n  \r\n    for (const carta of cartas) {\r\n      let valor = 0;\r\n  \r\n      if (!carta.isFaceDown) {\r\n        if (carta.numero === 'A') {\r\n          valor = 11; // As siempre vale 11\r\n        } else if (['K', 'Q', 'J'].includes(carta.numero)) {\r\n          valor = 10;\r\n        } else {\r\n          valor = parseInt(carta.numero);\r\n        }\r\n      }\r\n  \r\n      puntuacion += valor;\r\n    }\r\n  \r\n    return puntuacion;\r\n  };\r\n  console.log(cartas)\r\n  const manejarFinDeRonda = useCallback(() => {\r\n    const puntuacionJugador = calcularPuntuacion(jugadorCartas);\r\n    const puntuacionCrupier = calcularPuntuacion(crupierCartas);\r\n  \r\n    if (puntuacionJugador < 21 && puntuacionCrupier > 21) {\r\n      setEstadoJuego('jugadorGana');\r\n      window.alert('Gana el jugador, Crupier sobrepasó de 21 puntos.');\r\n    } else if (puntuacionCrupier < 21 && puntuacionJugador > 21) {\r\n      setEstadoJuego('crupierGana');\r\n      window.alert('Gana el Crupier, por acercarse más al 21 que el jugador');\r\n    } else if (puntuacionCrupier === puntuacionJugador) {\r\n      setEstadoJuego('empate'); \r\n      window.alert('Empataron');\r\n    } else if (puntuacionCrupier > puntuacionJugador && puntuacionCrupier <= 21) {\r\n      setEstadoJuego('crupierGana');\r\n      window.alert('Gana el Crupier.');\r\n    } else {\r\n      setEstadoJuego('jugadorGana');\r\n      window.alert('Gana el jugador.');\r\n    }\r\n  }, [jugadorCartas, crupierCartas]);\r\n  \r\n\r\n  const solicitarCartaJugador = useCallback(() => {\r\n    if (\r\n      estadoJuego !== 'plantado' &&\r\n      estadoJuego !== 'jugadorGana' &&\r\n      estadoJuego !== 'crupierGana' &&\r\n      estadoJuego !== 'empate'\r\n    ) {\r\n      repartirCartas(1, 'jugador');\r\n\r\n      const puntuacionActual = calcularPuntuacion(jugadorCartas);\r\n\r\n      if (puntuacionActual >= 21) {\r\n        manejarFinDeRonda();\r\n      }\r\n    }\r\n  }, [repartirCartas, jugadorCartas, manejarFinDeRonda, estadoJuego]);\r\n\r\n  const plantarse = useCallback(() => {\r\n    setEstadoJuego('plantado');\r\n    const nuevasCartasCrupier = [...crupierCartas];\r\n    nuevasCartasCrupier.forEach((carta) => (carta.isFaceDown = false));\r\n    setCrupierCartas(nuevasCartasCrupier);\r\n\r\n    const robarCartasCrupier = () => {\r\n      const nuevasCartasCrupier = [...crupierCartasRef.current];\r\n      let puntuacionCrupier = calcularPuntuacion(nuevasCartasCrupier);\r\n\r\n      if (puntuacionCrupier < 17) {\r\n        repartirCartas(1, 'crupier');\r\n        setTimeout(robarCartasCrupier, 500);\r\n      } else {\r\n        manejarFinDeRonda();\r\n        return;\r\n      }\r\n    };\r\n    robarCartasCrupier();\r\n  }, [crupierCartas, manejarFinDeRonda, repartirCartas]);\r\n\r\n  useEffect(() => {\r\n    crupierCartasRef.current = crupierCartas;\r\n  }, [crupierCartas]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row mt-4\">\r\n        <div className=\"crupierCartas col-md-12\">\r\n          <Crupier cartas={crupierCartas} solicitarCarta={solicitarCartaJugador} />\r\n        </div>\r\n        <div className=\"jugadorCartas col-md-12\">\r\n          <Jugador cartas={jugadorCartas} solicitarCarta={solicitarCartaJugador} plantarse={plantarse} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 text-center\">\r\n          <button className=\"boton3\" onClick={iniciarNuevaRonda}>\r\n            Nueva Ronda\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Juego;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,WAAW,CAAC;EAC3D,MAAMkB,gBAAgB,GAAGf,MAAM,CAACW,aAAa,CAAC;EAE9C,MAAMK,aAAa,GAAGlB,WAAW,CAAC,MAAM;IACtC,MAAMmB,WAAW,GAAG,EAAE;IACtB,MAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC;IACvD,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAElFD,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAK;MACtBF,OAAO,CAACC,OAAO,CAAEE,MAAM,IAAK;QAC1B,IAAIC,KAAK,GAAG,CAAC;QACb,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;UACpCC,KAAK,GAAG,EAAE;QACZ,CAAC,MAAM,IAAID,MAAM,KAAK,GAAG,EAAE;UACzBC,KAAK,GAAGE,QAAQ,CAACH,MAAM,CAAC;QAC1B,CAAC,MAAM;UACLC,KAAK,GAAG,EAAE;QACZ;QACAN,WAAW,CAACS,IAAI,CAAC;UAAEJ,MAAM;UAAED,IAAI;UAAEE,KAAK;UAAEI,UAAU,EAAE;QAAM,CAAC,CAAC;MAC9D,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,KAAK,IAAIC,CAAC,GAAGX,WAAW,CAACY,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACX,WAAW,CAACW,CAAC,CAAC,EAAEX,WAAW,CAACa,CAAC,CAAC,CAAC,GAAG,CAACb,WAAW,CAACa,CAAC,CAAC,EAAEb,WAAW,CAACW,CAAC,CAAC,CAAC;IACrE;IAEApB,SAAS,CAACS,WAAW,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACdiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMkB,cAAc,GAAGpC,WAAW,CAAC,CAACqC,QAAQ,EAAEC,YAAY,KAAK;IAC7D,MAAMC,YAAY,GAAG9B,MAAM,CAAC+B,KAAK,CAAC,CAAC,EAAEH,QAAQ,CAAC;IAC9C3B,SAAS,CAACD,MAAM,CAAC+B,KAAK,CAACH,QAAQ,CAAC,CAAC;IAEjC,IAAIC,YAAY,KAAK,SAAS,EAAE;MAC9B1B,gBAAgB,CAAE6B,MAAM,IAAK,CAAC,GAAGA,MAAM,EAAE,GAAGF,YAAY,CAAC,CAAC;IAC5D,CAAC,MAAM,IAAID,YAAY,KAAK,SAAS,EAAE;MACrC;MACA,MAAMI,gBAAgB,GAAGjC,MAAM,CAACkC,MAAM,CACnCC,KAAK,IACJ,CAACL,YAAY,CAACM,IAAI,CACfC,UAAU,IAAKA,UAAU,CAACtB,MAAM,KAAKoB,KAAK,CAACpB,MAAM,IAAIsB,UAAU,CAACvB,IAAI,KAAKqB,KAAK,CAACrB,IAClF,CACJ,CAAC;MAED,MAAMwB,cAAc,GAAGL,gBAAgB,CAACT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGO,gBAAgB,CAACX,MAAM,CAAC,CAAC;MAC5F,MAAMiB,aAAa,GAAG,CAACD,cAAc,EAAE,GAAGR,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAEhE,IAAIQ,aAAa,CAAC,CAAC,CAAC,EAAE;QACpBA,aAAa,CAAC,CAAC,CAAC,CAACnB,UAAU,GAAG,IAAI;MACpC;MAEAf,gBAAgB,CAAE2B,MAAM,IAAK,CAAC,GAAGA,MAAM,EAAE,GAAGO,aAAa,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,CAACvC,MAAM,CAAC,CAAC;EAGZ,MAAMwC,iBAAiB,GAAGjD,WAAW,CAAC,MAAM;IAC1CkB,aAAa,CAAC,CAAC;IACfN,gBAAgB,CAAC,EAAE,CAAC;IACpBE,gBAAgB,CAAC,EAAE,CAAC;IACpBsB,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC;IAC5BA,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC;IAC5BpB,cAAc,CAAC,SAAS,CAAC;EAC3B,CAAC,EAAE,CAACE,aAAa,EAAEkB,cAAc,CAAC,CAAC;EAEnC,MAAMc,kBAAkB,GAAIT,MAAM,IAAK;IACrC,IAAIU,UAAU,GAAG,CAAC;IAElB,KAAK,MAAMP,KAAK,IAAIH,MAAM,EAAE;MAC1B,IAAIhB,KAAK,GAAG,CAAC;MAEb,IAAI,CAACmB,KAAK,CAACf,UAAU,EAAE;QACrB,IAAIe,KAAK,CAACpB,MAAM,KAAK,GAAG,EAAE;UACxBC,KAAK,GAAG,EAAE,CAAC,CAAC;QACd,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACkB,KAAK,CAACpB,MAAM,CAAC,EAAE;UACjDC,KAAK,GAAG,EAAE;QACZ,CAAC,MAAM;UACLA,KAAK,GAAGE,QAAQ,CAACiB,KAAK,CAACpB,MAAM,CAAC;QAChC;MACF;MAEA2B,UAAU,IAAI1B,KAAK;IACrB;IAEA,OAAO0B,UAAU;EACnB,CAAC;EACDC,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;EACnB,MAAMa,iBAAiB,GAAGtD,WAAW,CAAC,MAAM;IAC1C,MAAMuD,iBAAiB,GAAGL,kBAAkB,CAACvC,aAAa,CAAC;IAC3D,MAAM6C,iBAAiB,GAAGN,kBAAkB,CAACrC,aAAa,CAAC;IAE3D,IAAI0C,iBAAiB,GAAG,EAAE,IAAIC,iBAAiB,GAAG,EAAE,EAAE;MACpDxC,cAAc,CAAC,aAAa,CAAC;MAC7ByC,MAAM,CAACC,KAAK,CAAC,kDAAkD,CAAC;IAClE,CAAC,MAAM,IAAIF,iBAAiB,GAAG,EAAE,IAAID,iBAAiB,GAAG,EAAE,EAAE;MAC3DvC,cAAc,CAAC,aAAa,CAAC;MAC7ByC,MAAM,CAACC,KAAK,CAAC,yDAAyD,CAAC;IACzE,CAAC,MAAM,IAAIF,iBAAiB,KAAKD,iBAAiB,EAAE;MAClDvC,cAAc,CAAC,QAAQ,CAAC;MACxByC,MAAM,CAACC,KAAK,CAAC,WAAW,CAAC;IAC3B,CAAC,MAAM,IAAIF,iBAAiB,GAAGD,iBAAiB,IAAIC,iBAAiB,IAAI,EAAE,EAAE;MAC3ExC,cAAc,CAAC,aAAa,CAAC;MAC7ByC,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC;IAClC,CAAC,MAAM;MACL1C,cAAc,CAAC,aAAa,CAAC;MAC7ByC,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC;IAClC;EACF,CAAC,EAAE,CAAC/C,aAAa,EAAEE,aAAa,CAAC,CAAC;EAGlC,MAAM8C,qBAAqB,GAAG3D,WAAW,CAAC,MAAM;IAC9C,IACEe,WAAW,KAAK,UAAU,IAC1BA,WAAW,KAAK,aAAa,IAC7BA,WAAW,KAAK,aAAa,IAC7BA,WAAW,KAAK,QAAQ,EACxB;MACAqB,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC;MAE5B,MAAMwB,gBAAgB,GAAGV,kBAAkB,CAACvC,aAAa,CAAC;MAE1D,IAAIiD,gBAAgB,IAAI,EAAE,EAAE;QAC1BN,iBAAiB,CAAC,CAAC;MACrB;IACF;EACF,CAAC,EAAE,CAAClB,cAAc,EAAEzB,aAAa,EAAE2C,iBAAiB,EAAEvC,WAAW,CAAC,CAAC;EAEnE,MAAM8C,SAAS,GAAG7D,WAAW,CAAC,MAAM;IAClCgB,cAAc,CAAC,UAAU,CAAC;IAC1B,MAAM8C,mBAAmB,GAAG,CAAC,GAAGjD,aAAa,CAAC;IAC9CiD,mBAAmB,CAACxC,OAAO,CAAEsB,KAAK,IAAMA,KAAK,CAACf,UAAU,GAAG,KAAM,CAAC;IAClEf,gBAAgB,CAACgD,mBAAmB,CAAC;IAErC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAMD,mBAAmB,GAAG,CAAC,GAAG7C,gBAAgB,CAAC+C,OAAO,CAAC;MACzD,IAAIR,iBAAiB,GAAGN,kBAAkB,CAACY,mBAAmB,CAAC;MAE/D,IAAIN,iBAAiB,GAAG,EAAE,EAAE;QAC1BpB,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC;QAC5B6B,UAAU,CAACF,kBAAkB,EAAE,GAAG,CAAC;MACrC,CAAC,MAAM;QACLT,iBAAiB,CAAC,CAAC;QACnB;MACF;IACF,CAAC;IACDS,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAAClD,aAAa,EAAEyC,iBAAiB,EAAElB,cAAc,CAAC,CAAC;EAEtDnC,SAAS,CAAC,MAAM;IACdgB,gBAAgB,CAAC+C,OAAO,GAAGnD,aAAa;EAC1C,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACEP,OAAA;IAAK4D,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7D,OAAA;MAAK4D,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB7D,OAAA;QAAK4D,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtC7D,OAAA,CAACF,OAAO;UAACqC,MAAM,EAAE5B,aAAc;UAACuD,cAAc,EAAET;QAAsB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACNlE,OAAA;QAAK4D,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtC7D,OAAA,CAACH,OAAO;UAACsC,MAAM,EAAE9B,aAAc;UAACyD,cAAc,EAAET,qBAAsB;UAACE,SAAS,EAAEA;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNlE,OAAA;MAAK4D,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClB7D,OAAA;QAAK4D,SAAS,EAAC,uBAAuB;QAAAC,QAAA,eACpC7D,OAAA;UAAQ4D,SAAS,EAAC,QAAQ;UAACO,OAAO,EAAExB,iBAAkB;UAAAkB,QAAA,EAAC;QAEvD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChE,EAAA,CApLID,KAAK;AAAAmE,EAAA,GAALnE,KAAK;AAsLX,eAAeA,KAAK;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}