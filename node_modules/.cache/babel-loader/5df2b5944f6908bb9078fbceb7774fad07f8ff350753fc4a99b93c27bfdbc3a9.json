{"ast":null,"code":"var _jsxFileName = \"M:\\\\Trabajos\\\\2oTrimestre\\\\Interfaces\\\\blackjack\\\\src\\\\componentes\\\\Juego\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Jugador from '../Jugador';\nimport Crupier from '../Crupier';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Juego = () => {\n  _s();\n  const [baraja, setBaraja] = useState([]);\n  const [jugadorCartas, setJugadorCartas] = useState([]);\n  const [crupierCartas, setCrupierCartas] = useState([]);\n  const [estadoJuego, setEstadoJuego] = useState('iniciando');\n  const crupierCartasRef = useRef(crupierCartas);\n  useEffect(() => {\n    crupierCartasRef.current = crupierCartas;\n  }, [crupierCartas]);\n\n  // Resto del código...\n\n  const plantarse = useCallback(() => {\n    setEstadoJuego('plantado');\n    // Da vuelta las cartas boca abajo del crupier\n    const nuevasCartasCrupier = [...crupierCartas];\n    nuevasCartasCrupier.forEach(carta => carta.isFaceDown = false);\n    setCrupierCartas(nuevasCartasCrupier);\n\n    // Definir una función para seguir robando cartas automáticamente para el crupier\n    const robarCartasCrupier = () => {\n      let puntuacionCrupier = calcularPuntuacion(crupierCartasRef.current);\n\n      // Si el puntaje del crupier es menor que 17, sigue robando cartas\n      if (puntuacionCrupier < 17) {\n        repartirCartas(1, 'crupier');\n        // Llamar recursivamente a la función después de un breve retraso\n        setTimeout(robarCartasCrupier, 500);\n      } else {\n        // Si el puntaje del crupier es igual o mayor que 17, manejar el fin de la ronda\n        manejarFinDeRonda();\n      }\n    };\n    // Iniciar el proceso de robar cartas para el crupier\n    robarCartasCrupier();\n  }, [crupierCartasRef, manejarFinDeRonda, repartirCartas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Juego, \"HaOjrzsn8npXoeG1KpJPpnOdMek=\");\n_c = Juego;\nexport default Juego;\nvar _c;\n$RefreshReg$(_c, \"Juego\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Jugador","Crupier","jsxDEV","_jsxDEV","Juego","_s","baraja","setBaraja","jugadorCartas","setJugadorCartas","crupierCartas","setCrupierCartas","estadoJuego","setEstadoJuego","crupierCartasRef","current","plantarse","nuevasCartasCrupier","forEach","carta","isFaceDown","robarCartasCrupier","puntuacionCrupier","calcularPuntuacion","repartirCartas","setTimeout","manejarFinDeRonda","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["M:/Trabajos/2oTrimestre/Interfaces/blackjack/src/componentes/Juego/index.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport Jugador from '../Jugador';\r\nimport Crupier from '../Crupier';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Juego = () => {\r\n  const [baraja, setBaraja] = useState([]);\r\n  const [jugadorCartas, setJugadorCartas] = useState([]);\r\n  const [crupierCartas, setCrupierCartas] = useState([]);\r\n  const [estadoJuego, setEstadoJuego] = useState('iniciando');\r\n  const crupierCartasRef = useRef(crupierCartas);\r\n\r\n  useEffect(() => {\r\n    crupierCartasRef.current = crupierCartas;\r\n  }, [crupierCartas]);\r\n\r\n  // Resto del código...\r\n\r\n  const plantarse = useCallback(() => {\r\n    setEstadoJuego('plantado');\r\n    // Da vuelta las cartas boca abajo del crupier\r\n    const nuevasCartasCrupier = [...crupierCartas];\r\n    nuevasCartasCrupier.forEach((carta) => (carta.isFaceDown = false));\r\n    setCrupierCartas(nuevasCartasCrupier);\r\n  \r\n    // Definir una función para seguir robando cartas automáticamente para el crupier\r\n    const robarCartasCrupier = () => {\r\n      let puntuacionCrupier = calcularPuntuacion(crupierCartasRef.current);\r\n  \r\n      // Si el puntaje del crupier es menor que 17, sigue robando cartas\r\n      if (puntuacionCrupier < 17) {\r\n        repartirCartas(1, 'crupier');\r\n        // Llamar recursivamente a la función después de un breve retraso\r\n        setTimeout(robarCartasCrupier, 500);\r\n      } else {\r\n        // Si el puntaje del crupier es igual o mayor que 17, manejar el fin de la ronda\r\n        manejarFinDeRonda();\r\n      }\r\n    };\r\n    // Iniciar el proceso de robar cartas para el crupier\r\n    robarCartasCrupier();\r\n  }, [crupierCartasRef, manejarFinDeRonda, repartirCartas]);\r\n  \r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {/* Resto del código */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Juego;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,WAAW,CAAC;EAC3D,MAAMkB,gBAAgB,GAAGf,MAAM,CAACW,aAAa,CAAC;EAE9Cb,SAAS,CAAC,MAAM;IACdiB,gBAAgB,CAACC,OAAO,GAAGL,aAAa;EAC1C,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;;EAEA,MAAMM,SAAS,GAAGlB,WAAW,CAAC,MAAM;IAClCe,cAAc,CAAC,UAAU,CAAC;IAC1B;IACA,MAAMI,mBAAmB,GAAG,CAAC,GAAGP,aAAa,CAAC;IAC9CO,mBAAmB,CAACC,OAAO,CAAEC,KAAK,IAAMA,KAAK,CAACC,UAAU,GAAG,KAAM,CAAC;IAClET,gBAAgB,CAACM,mBAAmB,CAAC;;IAErC;IACA,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAIC,iBAAiB,GAAGC,kBAAkB,CAACT,gBAAgB,CAACC,OAAO,CAAC;;MAEpE;MACA,IAAIO,iBAAiB,GAAG,EAAE,EAAE;QAC1BE,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC;QAC5B;QACAC,UAAU,CAACJ,kBAAkB,EAAE,GAAG,CAAC;MACrC,CAAC,MAAM;QACL;QACAK,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC;IACD;IACAL,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACP,gBAAgB,EAAEY,iBAAiB,EAAEF,cAAc,CAAC,CAAC;EAEzD,oBACErB,OAAA;IAAKwB,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3CID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AA6CX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}