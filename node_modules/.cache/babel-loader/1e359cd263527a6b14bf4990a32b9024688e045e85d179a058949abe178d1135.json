{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlumnoT\\\\Desktop\\\\VSCode\\\\2oTrimestre\\\\Interfaces\\\\blackjack\\\\src\\\\componentes\\\\Crupier\\\\index.js\";\nimport React from 'react';\nimport Mano from '../Mano';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crupier = ({\n  cartas,\n  mostrarPrimeraCarta,\n  solicitarCarta\n}) => {\n  const cambiarCartaBocaAbajo = () => {\n    // Cambiar la carta boca abajo por una nueva boca arriba\n    const nuevaCarta = {\n      numero: '0',\n      palo: 'bocaabajo',\n      imagen: './Imagenes/back.png'\n    };\n    // Lógica para cambiar la carta boca abajo, esto puede variar dependiendo de cómo almacenes las cartas en tu estado\n    // Por ejemplo, si cartas es un array y la carta boca abajo es la primera, podrías hacer algo como:\n    const nuevasCartas = [...cartas];\n    nuevasCartas[0] = nuevaCarta;\n    // Actualizar el estado con las nuevas cartas\n    setCartas(nuevasCartas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crupier\",\n    children: [/*#__PURE__*/_jsxDEV(Mano, {\n      cartas: cartas,\n      titulo: \"Crupier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botonCrupier\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton4\",\n        onClick: mostrarPrimeraCarta ? solicitarCarta : cambiarCartaBocaAbajo,\n        children: mostrarPrimeraCarta ? 'Solicitar Carta' : 'Cambiar Carta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Crupier;\nexport default Crupier;\nvar _c;\n$RefreshReg$(_c, \"Crupier\");","map":{"version":3,"names":["React","Mano","jsxDEV","_jsxDEV","Crupier","cartas","mostrarPrimeraCarta","solicitarCarta","cambiarCartaBocaAbajo","nuevaCarta","numero","palo","imagen","nuevasCartas","setCartas","className","children","titulo","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AlumnoT/Desktop/VSCode/2oTrimestre/Interfaces/blackjack/src/componentes/Crupier/index.js"],"sourcesContent":["import React from 'react';\r\nimport Mano from '../Mano';\r\n\r\nconst Crupier = ({ cartas, mostrarPrimeraCarta, solicitarCarta }) => {\r\n  \r\n  const cambiarCartaBocaAbajo = () => {\r\n    // Cambiar la carta boca abajo por una nueva boca arriba\r\n    const nuevaCarta = { numero: '0', palo: 'bocaabajo', imagen: './Imagenes/back.png' };\r\n    // Lógica para cambiar la carta boca abajo, esto puede variar dependiendo de cómo almacenes las cartas en tu estado\r\n    // Por ejemplo, si cartas es un array y la carta boca abajo es la primera, podrías hacer algo como:\r\n    const nuevasCartas = [...cartas];\r\n    nuevasCartas[0] = nuevaCarta;\r\n    // Actualizar el estado con las nuevas cartas\r\n    setCartas(nuevasCartas);\r\n  };\r\n\r\n  return (\r\n    <div className=\"crupier\">\r\n      <Mano cartas={cartas} titulo=\"Crupier\" />\r\n\r\n      <div className=\"botonCrupier\">\r\n        <button className=\"boton4\" onClick={mostrarPrimeraCarta ? solicitarCarta : cambiarCartaBocaAbajo}>\r\n          {mostrarPrimeraCarta ? 'Solicitar Carta' : 'Cambiar Carta'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crupier;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,MAAM;EAAEC,mBAAmB;EAAEC;AAAe,CAAC,KAAK;EAEnE,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC;IACA,MAAMC,UAAU,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE,WAAW;MAAEC,MAAM,EAAE;IAAsB,CAAC;IACpF;IACA;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGR,MAAM,CAAC;IAChCQ,YAAY,CAAC,CAAC,CAAC,GAAGJ,UAAU;IAC5B;IACAK,SAAS,CAACD,YAAY,CAAC;EACzB,CAAC;EAED,oBACEV,OAAA;IAAKY,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBb,OAAA,CAACF,IAAI;MAACI,MAAM,EAAEA,MAAO;MAACY,MAAM,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzClB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3Bb,OAAA;QAAQY,SAAS,EAAC,QAAQ;QAACO,OAAO,EAAEhB,mBAAmB,GAAGC,cAAc,GAAGC,qBAAsB;QAAAQ,QAAA,EAC9FV,mBAAmB,GAAG,iBAAiB,GAAG;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAxBInB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}